Lev使用マニュアル

この文書はLevでコーディングをする為のガイド兼API仕様書となっています。

※　この文章は未完全です。現在Levプロジェクトそのものが未完成であり、
　　リリースバージョン名が0代(lev-0.x.x)である間は仕様もすぐに変わる可能性が高いです。
　　また、なるべくLuaの文法を利用して、なるべく短いコーディングになるよう心がけていますが、
　　テーブル名・ファイル名・関数名・引数仕様などは現状、独断で決定していますので、
　　もし仕様に関するご要望などありましたら、
　　公式のリクエストページ　http://code.google.com/p/lev/issues/list までお問合わせ下さい。

【Levについて】

LevとはLua言語の文法を完全に引き継いだインタプリタであり、
同時にLuaに追加機能の関数を提供するAPIライブラリの名称です。
Levの機能を利用する為には、Luaコードファイル（entry.luaなど）の冒頭に、

require 'lev'

と記述して下さい。
lev実行ファイルからの起動の場合は実行ファイル本体から、
luaの公式インタプリタからの起動の場合は、
動的リンクライブラリ（DLLファイルあるいはSOファイル）から自動的に機能がロードされます。

Levライブラリは、現在、一枚岩で多機能を果たす実行ファイル、あるいはライブラリとして提供されてされています。
これは、Luaらしい記述法で、コード記述量を大幅に広げ、お手軽スクリプトから本格プログラムまでの作成を支援します。
Levライブラリの機能を全て利用可能にする為には、Luaコードファイル（entry.txtなど）の冒頭に、

require 'lev.std'

と記述して下さい。他にも内部実装されているサブライブラリを部分的に有効にする方法も後々紹介します。

以下にLevライブラリの機能を紹介します。


【Levの機能紹介】

※　書きかけ
ちょっと仕様がコロコロ変わるので、開発がある程度進んでから書きなおそうと思います。

